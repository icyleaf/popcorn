crystal_doc_search_index_callback({"repository_name":"popcorn","body":"![popcorn-logo](https://github.com/icyleaf/popcorn/raw/master/logo-small.png)\n\n# Popcorn\n\n[![Language](https://img.shields.io/badge/language-crystal-776791.svg)](https://github.com/crystal-lang/crystal)\n[![Tag](https://img.shields.io/github/tag/icyleaf/popcorn.svg)](https://github.com/icyleaf/popcorn/blob/master/CHANGELOG.md)\n[![Build Status](https://img.shields.io/circleci/project/github/icyleaf/popcorn/master.svg?style=flat)](https://circleci.com/gh/icyleaf/popcorn)\n\nEasy and Safe popping from one type to another. Popcorn icon by HLD from the [Noun Project](https://thenounproject.com).\n\nBuild in Crystal version >= `v0.31.0`.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  popcorn:\n    github: icyleaf/popcorn\n```\n\n## Usage\n\nPopcorn is easy and safe from one type to another tool.\n\nPopcorn proviedes a handful of `to_xxx`/`to_xxx?` methods and `xxx` is full type name,\nThis is distinguish between built-in methods in Crystal.\n\n- to_int8\n- to_int16\n- to_int (alias to to_int32)\n- to_int64\n- to_uint8\n- to_uint16\n- to_uint (alias to to_uint32)\n- to_uint64\n- to_float32\n- to_float64\n- to_bool\n- to_time(location : Time::Location? = nil, formatters : Array(String)? = nil)\n- to_array(target : T.class = String)\n- to_hash(target : T.class = String)\n- to_string (alias to to_s in Crystal).\n\n```crystal\nrequire \"popcorn\"\n\nPopcorn.to_sting(\"foobar\")                                                    # => \"foobar\"\nPopcorn.to_string(8.31)                                                       # => \"8.31\"\nPopcorn.to_int(\"1\")                                                           # => 1\nPopcorn.to_int(\"123abc\")                                                      # => 123\nPopcorn.to_bool(\"no\")                                                         # => false\nPopcorn.to_bool(\"unkown\")                                                     # => raise a `TypeCastError` exception\nPopcorn.to_bool?(\"unkown\")                                                    # => nil\nPopcorn.to_time(\"2018-07-23T10:11:22\")                                        # => Time.local(2018, 7, 23, 10, 11, 22, location: Time::Location::UTC)\nPopcorn.to_time(\"2018-07-23T10:11:22Z\", Time::Location.load(\"Asia/Shanghai\")) # => Time.local(2018, 7, 23, 10, 11, 22, location: Time::Location.load(\"Asia/Shanghai\"))\nPopcorn.to_time(\"Tue, 20 Jan 2018\", formatter: [\"%a, %d %b %Y\"])              # => Time.local(2018, 7, 23, 10, 11, 22, location: Time::Location::UTC)\n```\n\nAlso these methods had been inject to Crystal literals, you can call it directly, Monkey Patching list:\n\n- String\n- Int\n- Float\n- Bool\n- Time\n- Symbol\n- NamedTupe\n- Array\n- Hash\n- Nil\n- JSON::Any\n- YAML::Any\n\n```crystal\nrequire \"popcorn\"\nrequire \"popcorn/injection\" # => make sure require it!\n\n\"foobar\".to_string                                                   # => \"foobar\"\n8.31.to_string                                                       # => \"8.31\"\n\"1\".to_int                                                           # => 1\n\"123abc\".to_int                                                      # => 123\n\"no\".to_bool                                                         # => false\n\"unkown\".to_bool                                                     # => raise a `TypeCastError` exception\n\"unkown\".to_bool?                                                    # => nil\n\"2018-07-23T10:11:22\".to_time                                        # => Time.local(2018, 7, 23, 10, 11, 22, location: Time::Location::UTC)\n\"2018-07-23T10:11:22Z\".to_time(Time::Location.load(\"Asia/Shanghai\")) # => Time.local(2018, 7, 23, 10, 11, 22, location: Time::Location.load(\"Asia/Shanghai\"))\n\"Tue, 20 Jan 2018\".to_time(formatter: [\"%a, %d %b %Y\"])              # => Time.local(2018, 7, 23, 10, 11, 22, location: Time::Location::UTC)\n```\n\n## Casting unmatch class\n\nBy desgin in Crystal, we can not match type with `T`(no override by alone type) and no time to match each shard type. so you can write your own.\n\nReference at [totem](https://github.com/icyleaf/totem/blob/b8bfca5f7a6ded111fc5074205dad7a205040b1d/src/totem/any.cr#L256).\n\n## Contributing\n\n1. Fork it (<https://github.com/icyleaf/popcorn/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [icyleaf](https://github.com/icyleaf) icyleaf - creator, maintainer\n\n## You may also like\n\n- [halite](https://github.com/icyleaf/halite) - Crystal HTTP Requests Client with a chainable REST API, built-in sessions and middlewares.\n- [totem](https://github.com/icyleaf/totem) - Load and parse a configuration file or string in JSON, YAML, dotenv formats.\n- [poncho](https://github.com/icyleaf/poncho) - A .env parser/loader improved for performance.\n- [fast-crystal](https://github.com/icyleaf/fast-crystal) - üí® Writing Fast Crystal üòç -- Collect Common Crystal idioms.\n","program":{"html_id":"popcorn/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"popcorn","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"popcorn/Bool","path":"Bool.html","kind":"struct","full_name":"Bool","name":"Bool","abstract":false,"superclass":{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Bool` cast methods","summary":"<p><code><a href=\"Bool.html\">Bool</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/Float32","path":"Float32.html","kind":"struct","full_name":"Float32","name":"Float32","abstract":false,"superclass":{"html_id":"popcorn/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"popcorn/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"popcorn/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Float32` cast methods","summary":"<p><code><a href=\"Float32.html\">Float32</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/Float64","path":"Float64.html","kind":"struct","full_name":"Float64","name":"Float64","abstract":false,"superclass":{"html_id":"popcorn/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"popcorn/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"popcorn/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Float64` cast methods","summary":"<p><code><a href=\"Float64.html\">Float64</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/Int16","path":"Int16.html","kind":"struct","full_name":"Int16","name":"Int16","abstract":false,"superclass":{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"popcorn/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Int16` cast methods","summary":"<p><code><a href=\"Int16.html\">Int16</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/Int32","path":"Int32.html","kind":"struct","full_name":"Int32","name":"Int32","abstract":false,"superclass":{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"popcorn/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Int32` cast methods","summary":"<p><code><a href=\"Int32.html\">Int32</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/Int64","path":"Int64.html","kind":"struct","full_name":"Int64","name":"Int64","abstract":false,"superclass":{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"popcorn/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Int64` cast methods","summary":"<p><code><a href=\"Int64.html\">Int64</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/Int8","path":"Int8.html","kind":"struct","full_name":"Int8","name":"Int8","abstract":false,"superclass":{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"popcorn/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Int8` cast methods","summary":"<p><code><a href=\"Int8.html\">Int8</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/Popcorn","path":"Popcorn.html","kind":"module","full_name":"Popcorn","name":"Popcorn","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/popcorn.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn.cr#L28"},{"filename":"src/popcorn/cast.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L3"},{"filename":"src/popcorn/injection.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/injection.cr#L1"},{"filename":"src/popcorn/version.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/version.cr#L1"}],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.2.2\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"popcorn/Popcorn/Cast","kind":"module","full_name":"Popcorn::Cast","name":"Cast"}],"subclasses":[],"including_types":[],"namespace":null,"doc":"Popcorn is easy and safe from one type to another tool.\n\nPopcorn proviedes a handful of `to_xxx`/`to_xxx?` methods and `xxx` is full type name,\nThis is distinguish between built-in methods in Crystal.\n\n- to_int\n- to_int8\n- to_int16\n- to_int64\n- to_float\n- to_float32\n- to_bool\n- to_string (alias to to_s in Crystal).\n- to_time\n\nAlso these methods had been inject to Crystal literals, you can call it directly, such like:\n\n```\nPopcorn.to_int(\"123abc\")                # => 123\nPopcorn.to_bool(\"No\")                   # => false\nPopcorn.to_time(\"2018-01-20T01:20:33Z\") # => Time.local(2018, 1, 20, 1, 20, 33, location: Time::Location::UTC)\n```\n\nMore methods to review `Popcorn::Cast`.","summary":"<p>Popcorn is easy and safe from one type to another tool.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"popcorn/Popcorn/Cast","path":"Popcorn/Cast.html","kind":"module","full_name":"Popcorn::Cast","name":"Cast","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/popcorn/cast.cr","line_number":4,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L4"},{"filename":"src/popcorn/cast/array.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L1"},{"filename":"src/popcorn/cast/bool.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L1"},{"filename":"src/popcorn/cast/float.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L1"},{"filename":"src/popcorn/cast/hash.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L1"},{"filename":"src/popcorn/cast/int.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L1"},{"filename":"src/popcorn/cast/json_any.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L3"},{"filename":"src/popcorn/cast/named_tuple.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L1"},{"filename":"src/popcorn/cast/nil.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L1"},{"filename":"src/popcorn/cast/string.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L1"},{"filename":"src/popcorn/cast/symbol.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L1"},{"filename":"src/popcorn/cast/time.cr","line_number":1,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L1"},{"filename":"src/popcorn/cast/yaml_any.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L3"}],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"popcorn/Popcorn","kind":"module","full_name":"Popcorn","name":"Popcorn"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(raw,other)-instance-method","html_id":"cast(raw,other)-instance-method","name":"cast","doc":"Returns the target value represented by given data type.","summary":"<p>Returns the target value represented by given data type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":""},{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(raw, other)","args_html":"(raw, other)","location":{"filename":"src/popcorn/cast.cr","line_number":90,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L90"},"def":{"name":"cast","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":""},{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value = cast?(raw, other)\nelse\n  cast_error!(raw.class.to_s, other.to_s)\nend\nvalue\n"}},{"id":"cast?(raw,other)-instance-method","html_id":"cast?(raw,other)-instance-method","name":"cast?","doc":"Returns the target value or `Nil` represented by given data type.","summary":"<p>Returns the target value or <code>Nil</code> represented by given data type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":""},{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(raw, other)","args_html":"(raw, other)","location":{"filename":"src/popcorn/cast.cr","line_number":66,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L66"},"def":{"name":"cast?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":""},{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  case other\n  when Int8.class\n    to_int8?(raw)\n  when Int16.class\n    to_int16?(raw)\n  when Int32.class\n    to_int32?(raw)\n  when Int64.class\n    to_int64?(raw)\n  when UInt8.class\n    to_uint8?(raw)\n  when UInt16.class\n    to_uint16?(raw)\n  when UInt32.class\n    to_uint32?(raw)\n  when UInt64.class\n    to_uint64?(raw)\n  when Float32.class\n    to_float32?(raw)\n  when Float64.class\n    to_float64?(raw)\n  when Bool.class\n    to_bool?(raw)\n  when Time.class\n    to_time?(raw)\n  when Array.class\n    to_array?(raw)\n  when Hash.class\n    to_hash?(raw)\n  when String.class\n    raw.to_s\n  else\n    nil\n  end\nrescue TypeCastError\n  nil\nend"}},{"id":"cast_error!(source:String,other:String)-instance-method","html_id":"cast_error!(source:String,other:String)-instance-method","name":"cast_error!","doc":"Raise a `TypeCastError` exception.","summary":"<p>Raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"},{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"String"}],"args_string":"(source : String, other : String)","args_html":"(source : <a href=\"../String.html\">String</a>, other : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":96,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L96"},"def":{"name":"cast_error!","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"},{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(TypeCastError.new(\"cast from #{source} to #{other} failed.\"))"}},{"id":"to_array(raw:Array,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:Array,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Array, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Array, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"Array\", \"Array\")\nend\nvalue\n"}},{"id":"to_array(raw:Bool,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:Bool,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Bool, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"Bool\", \"Array\")\nend\nvalue\n"}},{"id":"to_array(raw:Float,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:Float,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Float, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Float, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"Float\", \"Array\")\nend\nvalue\n"}},{"id":"to_array(raw:Hash,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:Hash,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Hash, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Hash, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"Hash\", \"Array\")\nend\nvalue\n"}},{"id":"to_array(raw:Int,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:Int,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Int, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Int, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"Int\", \"Array\")\nend\nvalue\n"}},{"id":"to_array(raw:JSON::Any,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:JSON::Any,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : JSON::Any, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Array\")\nend\nvalue\n"}},{"id":"to_array(raw:NamedTuple,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:NamedTuple,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : NamedTuple, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : NamedTuple, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Array\")\nend\nvalue\n"}},{"id":"to_array(raw:Time,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:Time,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Time, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Time.html\">Time</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"Time\", \"Array\")\nend\nvalue\n"}},{"id":"to_array(raw:String,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:String,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : String, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../String.html\">String</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"String\", \"Array\")\nend\nvalue\n"}},{"id":"to_array(raw:Symbol,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:Symbol,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Symbol, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"Symbol\", \"Array\")\nend\nvalue\n"}},{"id":"to_array(raw:YAML::Any,value_type:T.class=String)forallT-instance-method","html_id":"to_array(raw:YAML::Any,value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : YAML::Any, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_array","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_array?(raw, value_type)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Array\")\nend\nvalue\n"}},{"id":"to_array?(raw:String,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:String,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given String type.","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : String, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../String.html\">String</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/string.cr","line_number":97,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L97"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[(cast(raw, T)).as(T)]"}},{"id":"to_array?(raw:YAML::Any,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:YAML::Any,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : YAML::Any, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":96,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L96"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if data = raw.as_a?\n  data.each_with_object(Array(T).new) do |v, obj|\n    obj << ((cast(v.to_s, T)).as(T))\n  end\nelse\n  if data = raw.as_h?\n    data.each_with_object(Array(T).new) do |__arg0, obj|\n      k = __arg0[0]\n      v = __arg0[1]\n      (obj << ((cast(k.to_s, T)).as(T))) << ((cast(v.to_s, T)).as(T))\n    end\n  else\n    [(cast(raw.to_s, T)).as(T)]\n  end\nend"}},{"id":"to_array?(raw:Symbol,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:Symbol,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Symbol, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":82,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L82"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[(cast(raw, T)).as(T)]"}},{"id":"to_array?(raw:Time,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:Time,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given Time type.","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Time, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Time.html\">Time</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/time.cr","line_number":82,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L82"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[(cast(raw, T)).as(T)]"}},{"id":"to_array?(raw:NamedTuple,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:NamedTuple,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : NamedTuple, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : NamedTuple, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":81,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L81"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if data = raw.as_a?\nelse\n  return\nend\ndata.each_with_object(Array(T).new) do |v, obj|\n  obj << ((cast(v, T)).as(T))\nend\n"}},{"id":"to_array?(raw:JSON::Any,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:JSON::Any,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : JSON::Any, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":96,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L96"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if data = raw.as_a?\n  data.each_with_object(Array(T).new) do |v, obj|\n    obj << ((cast(v.to_s, T)).as(T))\n  end\nelse\n  if data = raw.as_h?\n    data.each_with_object(Array(T).new) do |__arg0, obj|\n      k = __arg0[0]\n      v = __arg0[1]\n      (obj << ((cast(k.to_s, T)).as(T))) << ((cast(v.to_s, T)).as(T))\n    end\n  else\n    [(cast(raw.to_s, T)).as(T)]\n  end\nend"}},{"id":"to_array?(raw:Int,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:Int,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Int, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Int, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/int.cr","line_number":87,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L87"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[(cast(raw, T)).as(T)]"}},{"id":"to_array?(raw:Hash,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:Hash,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given Hash type.\n\n```\nPopcorn.to_array?({\"a\" => \"b\", \"c\" => \"d\"})   # => [\"a\", \"b\", \"c\", \"d\"]\n```","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Hash, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Hash, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/hash.cr","line_number":85,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L85"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Array(T).new.tap do |obj|\n  raw.each do |k, v|\n    (obj << k) << v\n  end\nend"}},{"id":"to_array?(raw:Float,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:Float,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Float, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Float, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/float.cr","line_number":82,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L82"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[(cast(raw, T)).as(T)]"}},{"id":"to_array?(raw:Bool,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:Bool,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Bool, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/bool.cr","line_number":82,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L82"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[(cast(raw, T)).as(T)]"}},{"id":"to_array?(raw:Array,value_type:T.class=String)forallT-instance-method","html_id":"to_array?(raw:Array,value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code>Array</code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Array, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Array, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/array.cr","line_number":81,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L81"},"def":{"name":"to_array?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw"}},{"id":"to_bool(raw:Array)-instance-method","html_id":"to_bool(raw:Array)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:Bool)-instance-method","html_id":"to_bool(raw:Bool)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:Float)-instance-method","html_id":"to_bool(raw:Float)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:Hash)-instance-method","html_id":"to_bool(raw:Hash)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:Int)-instance-method","html_id":"to_bool(raw:Int)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:JSON::Any)-instance-method","html_id":"to_bool(raw:JSON::Any)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:NamedTuple)-instance-method","html_id":"to_bool(raw:NamedTuple)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:Nil)-instance-method","html_id":"to_bool(raw:Nil)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:String)-instance-method","html_id":"to_bool(raw:String)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"String\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:Symbol)-instance-method","html_id":"to_bool(raw:Symbol)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:Time)-instance-method","html_id":"to_bool(raw:Time)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool(raw:YAML::Any)-instance-method","html_id":"to_bool(raw:YAML::Any)-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_bool","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_bool?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Bool\")\nend\nvalue\n"}},{"id":"to_bool?(raw:Time)-instance-method","html_id":"to_bool?(raw:Time)-instance-method","name":"to_bool?","doc":"Returns the `Nil` value represented by given Time type.\nIt accepts true, t, yes, y, on, 1, false, f, no, n, off, 0. Any other value return an error.","summary":"<p>Returns the <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":77,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L77"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_bool?(raw:Symbol)-instance-method","html_id":"to_bool?(raw:Symbol)-instance-method","name":"to_bool?","doc":"Returns the `Bool` or `Nil` value represented by given Symbol type.\nIt accepts true, t, yes, y, on, 1, false, f, no, n, off, 0. Any other value return an error.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> or <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":77,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L77"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_bool?(raw.to_s)"}},{"id":"to_bool?(raw:String)-instance-method","html_id":"to_bool?(raw:String)-instance-method","name":"to_bool?","doc":"Returns the `Bool` or `Nil` value represented by given String type.\nIt accepts true, t, yes, y, on, 1, false, f, no, n, off, 0. Any other value return an error.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":87,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L87"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw = raw.downcase\nif ([\"true\", \"t\", \"yes\", \"y\", \"on\", \"1\"] of ::String).includes?(raw)\n  true\nelse\n  if ([\"false\", \"f\", \"no\", \"n\", \"off\", \"0\"] of ::String).includes?(raw)\n    false\n  end\nend\n"}},{"id":"to_bool?(raw:Nil)-instance-method","html_id":"to_bool?(raw:Nil)-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given Nil type.\nIt accepts true, t, yes, y, on, 1, false, f, no, n, off, 0. Any other value return an error.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":77,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L77"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}},{"id":"to_bool?(raw:NamedTuple)-instance-method","html_id":"to_bool?(raw:NamedTuple)-instance-method","name":"to_bool?","doc":"Returns the `Bool` or `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> or <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":76,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L76"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!raw.size.zero?"}},{"id":"to_bool?(raw:JSON::Any)-instance-method","html_id":"to_bool?(raw:JSON::Any)-instance-method","name":"to_bool?","doc":"Returns the `Bool` or `Nil` value represented by given JSON::Any type.\nIt accepts true, t, yes, y, on, 1, false, f, no, n, off, 0. Any other value return an error.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":90,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L90"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_bool?(value)\nend\n"}},{"id":"to_bool?(raw:Int)-instance-method","html_id":"to_bool?(raw:Int)-instance-method","name":"to_bool?","doc":"Returns the `Bool` or `Nil` value represented by given Int type.\nIt accepts true, t, yes, y, on, 1, false, f, no, n, off, 0. Any other value return an error.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":82,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L82"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!raw.zero?"}},{"id":"to_bool?(raw:Hash)-instance-method","html_id":"to_bool?(raw:Hash)-instance-method","name":"to_bool?","doc":"Returns the `Bool` or `Nil` value represented by given data type.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> or <code>Nil</code> value represented by given data type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":76,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L76"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!raw.size.zero?"}},{"id":"to_bool?(raw:Float)-instance-method","html_id":"to_bool?(raw:Float)-instance-method","name":"to_bool?","doc":"Returns the `Bool` or `Nil` value represented by given Float type.\nIt accepts true, t, yes, y, on, 1, false, f, no, n, off, 0. Any other value return an error.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":77,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L77"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!raw.zero?"}},{"id":"to_bool?(raw:Bool)-instance-method","html_id":"to_bool?(raw:Bool)-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given Bool type.\nIt accepts true, t, yes, y, on, 1, false, f, no, n, off, 0. Any other value return an error.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":77,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L77"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw"}},{"id":"to_bool?(raw:Array)-instance-method","html_id":"to_bool?(raw:Array)-instance-method","name":"to_bool?","doc":"Returns the `Bool` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":76,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L76"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!raw.size.zero?"}},{"id":"to_bool?(raw:YAML::Any)-instance-method","html_id":"to_bool?(raw:YAML::Any)-instance-method","name":"to_bool?","doc":"Returns the `Bool` or `Nil` value represented by given YAML::Any type.\nIt accepts true, t, yes, y, on, 1, false, f, no, n, off, 0. Any other value return an error.","summary":"<p>Returns the <code><a href=\"../Bool.html\">Bool</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":90,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L90"},"def":{"name":"to_bool?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_bool?(value)\nend\n"}},{"id":"to_float(raw:String)-instance-method","html_id":"to_float(raw:String)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"String\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:Nil)-instance-method","html_id":"to_float(raw:Nil)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:NamedTuple)-instance-method","html_id":"to_float(raw:NamedTuple)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:JSON::Any)-instance-method","html_id":"to_float(raw:JSON::Any)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:Int)-instance-method","html_id":"to_float(raw:Int)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:Hash)-instance-method","html_id":"to_float(raw:Hash)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:Float)-instance-method","html_id":"to_float(raw:Float)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:Bool)-instance-method","html_id":"to_float(raw:Bool)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:Array)-instance-method","html_id":"to_float(raw:Array)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:Time)-instance-method","html_id":"to_float(raw:Time)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:YAML::Any)-instance-method","html_id":"to_float(raw:YAML::Any)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Float\")\nend\nvalue\n"}},{"id":"to_float(raw:Symbol)-instance-method","html_id":"to_float(raw:Symbol)-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"Float\")\nend\nvalue\n"}},{"id":"to_float32(raw:Array)-instance-method","html_id":"to_float32(raw:Array)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:Bool)-instance-method","html_id":"to_float32(raw:Bool)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:Float)-instance-method","html_id":"to_float32(raw:Float)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:Hash)-instance-method","html_id":"to_float32(raw:Hash)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:Int)-instance-method","html_id":"to_float32(raw:Int)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:JSON::Any)-instance-method","html_id":"to_float32(raw:JSON::Any)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:NamedTuple)-instance-method","html_id":"to_float32(raw:NamedTuple)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:Nil)-instance-method","html_id":"to_float32(raw:Nil)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:Symbol)-instance-method","html_id":"to_float32(raw:Symbol)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:Time)-instance-method","html_id":"to_float32(raw:Time)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:YAML::Any)-instance-method","html_id":"to_float32(raw:YAML::Any)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32(raw:String)-instance-method","html_id":"to_float32(raw:String)-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float32?(raw)\nif value.nil?\n  cast_error!(\"String\", \"Float32\")\nend\nvalue\n"}},{"id":"to_float32?(raw:YAML::Any)-instance-method","html_id":"to_float32?(raw:YAML::Any)-instance-method","name":"to_float32?","doc":"Returns the `Float32` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":74,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L74"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_float32?(value)\nend\n"}},{"id":"to_float32?(raw:Time)-instance-method","html_id":"to_float32?(raw:Time)-instance-method","name":"to_float32?","doc":"Returns the `Nil` value represented by given Time type.","summary":"<p>Returns the <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L63"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_float32?(raw:Symbol)-instance-method","html_id":"to_float32?(raw:Symbol)-instance-method","name":"to_float32?","doc":"Returns the `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L63"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_float32?(raw:String)-instance-method","html_id":"to_float32?(raw:String)-instance-method","name":"to_float32?","doc":"Returns the `Float32` or `Nil` value represented by given String type.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":72,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L72"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = raw.to_f32?(strict: false)\nvalue ? value : 0\n"}},{"id":"to_float32?(raw:Nil)-instance-method","html_id":"to_float32?(raw:Nil)-instance-method","name":"to_float32?","doc":"Returns the `Float32` or `Nil` value represented by given Nil type.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> or <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L63"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0.0_f32"}},{"id":"to_float32?(raw:NamedTuple)-instance-method","html_id":"to_float32?(raw:NamedTuple)-instance-method","name":"to_float32?","doc":"Returns the `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L63"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_float32?(raw:JSON::Any)-instance-method","html_id":"to_float32?(raw:JSON::Any)-instance-method","name":"to_float32?","doc":"Returns the `Float32` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":74,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L74"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_float32?(value)\nend\n"}},{"id":"to_float32?(raw:Int)-instance-method","html_id":"to_float32?(raw:Int)-instance-method","name":"to_float32?","doc":"Returns the `Float32` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L63"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_f32"}},{"id":"to_float32?(raw:Hash)-instance-method","html_id":"to_float32?(raw:Hash)-instance-method","name":"to_float32?","doc":"Returns the `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L63"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_float32?(raw:Float)-instance-method","html_id":"to_float32?(raw:Float)-instance-method","name":"to_float32?","doc":"Returns the `Float32` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L63"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_f32"}},{"id":"to_float32?(raw:Bool)-instance-method","html_id":"to_float32?(raw:Bool)-instance-method","name":"to_float32?","doc":"Returns the `Nil` value represented by given Bool type.","summary":"<p>Returns the <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L63"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_float32?(raw:Array)-instance-method","html_id":"to_float32?(raw:Array)-instance-method","name":"to_float32?","doc":"Returns the `Float32` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../Float32.html\">Float32</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L63"},"def":{"name":"to_float32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if raw.size == 1\n  return Popcorn.to_float32?(raw.first)\nend"}},{"id":"to_float64(raw:Bool)-instance-method","html_id":"to_float64(raw:Bool)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:Float)-instance-method","html_id":"to_float64(raw:Float)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:Hash)-instance-method","html_id":"to_float64(raw:Hash)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:Int)-instance-method","html_id":"to_float64(raw:Int)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:JSON::Any)-instance-method","html_id":"to_float64(raw:JSON::Any)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:NamedTuple)-instance-method","html_id":"to_float64(raw:NamedTuple)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:Nil)-instance-method","html_id":"to_float64(raw:Nil)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:String)-instance-method","html_id":"to_float64(raw:String)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"String\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:Symbol)-instance-method","html_id":"to_float64(raw:Symbol)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:Time)-instance-method","html_id":"to_float64(raw:Time)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:YAML::Any)-instance-method","html_id":"to_float64(raw:YAML::Any)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64(raw:Array)-instance-method","html_id":"to_float64(raw:Array)-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_float64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_float64?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"Float64\")\nend\nvalue\n"}},{"id":"to_float64?(raw:Nil)-instance-method","html_id":"to_float64?(raw:Nil)-instance-method","name":"to_float64?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":58,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L58"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0.0"}},{"id":"to_float64?(raw:YAML::Any)-instance-method","html_id":"to_float64?(raw:YAML::Any)-instance-method","name":"to_float64?","doc":"Returns the `Float64` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":68,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L68"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_float64?(value)\nend\n"}},{"id":"to_float64?(raw:NamedTuple)-instance-method","html_id":"to_float64?(raw:NamedTuple)-instance-method","name":"to_float64?","doc":"Returns the `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":58,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L58"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_float64?(raw:JSON::Any)-instance-method","html_id":"to_float64?(raw:JSON::Any)-instance-method","name":"to_float64?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":68,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L68"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_float64?(value)\nend\n"}},{"id":"to_float64?(raw:Int)-instance-method","html_id":"to_float64?(raw:Int)-instance-method","name":"to_float64?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":58,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L58"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_f"}},{"id":"to_float64?(raw:Hash)-instance-method","html_id":"to_float64?(raw:Hash)-instance-method","name":"to_float64?","doc":"Returns the `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":58,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L58"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_float64?(raw:Float)-instance-method","html_id":"to_float64?(raw:Float)-instance-method","name":"to_float64?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":58,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L58"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw"}},{"id":"to_float64?(raw:Bool)-instance-method","html_id":"to_float64?(raw:Bool)-instance-method","name":"to_float64?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":58,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L58"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_float64?(raw:Array)-instance-method","html_id":"to_float64?(raw:Array)-instance-method","name":"to_float64?","doc":"Returns the `Float64` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":58,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L58"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if raw.size == 1\n  return Popcorn.to_float64?(raw.first)\nend"}},{"id":"to_float64?(raw:String)-instance-method","html_id":"to_float64?(raw:String)-instance-method","name":"to_float64?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":66,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L66"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = raw.to_f?(strict: false)\nvalue ? value : 0\n"}},{"id":"to_float64?(raw:Symbol)-instance-method","html_id":"to_float64?(raw:Symbol)-instance-method","name":"to_float64?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":58,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L58"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_float64?(raw:Time)-instance-method","html_id":"to_float64?(raw:Time)-instance-method","name":"to_float64?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":58,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L58"},"def":{"name":"to_float64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_unix_f"}},{"id":"to_float?(raw:YAML::Any)-instance-method","html_id":"to_float?(raw:YAML::Any)-instance-method","name":"to_float?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L63"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:Time)-instance-method","html_id":"to_float?(raw:Time)-instance-method","name":"to_float?","doc":"Returns the `Float64` or `Nil` value represented by given Time type.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> or <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":53,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L53"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:Symbol)-instance-method","html_id":"to_float?(raw:Symbol)-instance-method","name":"to_float?","doc":"Returns the `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":53,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L53"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:String)-instance-method","html_id":"to_float?(raw:String)-instance-method","name":"to_float?","doc":"Returns the `Float64` or `Nil` value represented by given String type.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":61,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L61"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:Nil)-instance-method","html_id":"to_float?(raw:Nil)-instance-method","name":"to_float?","doc":"Returns the `Float64` or `Nil` value represented by given Nil type.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> or <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":53,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L53"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:NamedTuple)-instance-method","html_id":"to_float?(raw:NamedTuple)-instance-method","name":"to_float?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":53,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L53"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:JSON::Any)-instance-method","html_id":"to_float?(raw:JSON::Any)-instance-method","name":"to_float?","doc":"Returns the `Float64` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":63,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L63"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:Int)-instance-method","html_id":"to_float?(raw:Int)-instance-method","name":"to_float?","doc":"Returns the `Float64` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":53,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L53"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:Hash)-instance-method","html_id":"to_float?(raw:Hash)-instance-method","name":"to_float?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":53,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L53"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:Float)-instance-method","html_id":"to_float?(raw:Float)-instance-method","name":"to_float?","doc":"Returns the `Float64` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":53,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L53"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:Bool)-instance-method","html_id":"to_float?(raw:Bool)-instance-method","name":"to_float?","doc":"Returns the `Float64` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code><a href=\"../Float64.html\">Float64</a></code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":53,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L53"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_float?(raw:Array)-instance-method","html_id":"to_float?(raw:Array)-instance-method","name":"to_float?","doc":"Alias to `to_float64?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_float64?(raw:Nil)-instance-method\">#to_float64?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":53,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L53"},"def":{"name":"to_float?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_float64?(raw)"}},{"id":"to_hash(raw:Symbol,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:Symbol,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Symbol, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"Symbol\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash(raw:Bool,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:Bool,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Bool, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"Bool\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash(raw:Float,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:Float,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Float, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Float, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"Float\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash(raw:Hash,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:Hash,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Hash, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Hash, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"Hash\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash(raw:Int,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:Int,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Int, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Int, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"Int\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash(raw:JSON::Any,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:JSON::Any,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : JSON::Any, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash(raw:YAML::Any,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:YAML::Any,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : YAML::Any, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash(raw:NamedTuple,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:NamedTuple,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : NamedTuple, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : NamedTuple, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash(raw:Time,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:Time,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Time, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Time.html\">Time</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"Time\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash(raw:String,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:String,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : String, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../String.html\">String</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"String\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash(raw:Array,value_type:T.class=String)forallT-instance-method","html_id":"to_hash(raw:Array,value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Array, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Array, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_hash","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_hash?(raw, value_type)\nif value.nil?\n  cast_error!(\"Array\", \"Hash\")\nend\nvalue\n"}},{"id":"to_hash?(raw:YAML::Any,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:YAML::Any,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : YAML::Any, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":111,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L111"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if data = raw.as_h?\nelse\n  return\nend\ndata.each_with_object(Hash(String, T).new) do |__arg1, obj|\n  k = __arg1[0]\n  v = __arg1[1]\n  obj[k.to_s] = (cast(v, T)).as(T)\nend\n"}},{"id":"to_hash?(raw:Symbol,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:Symbol,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Symbol, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":87,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L87"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_hash?(raw:String,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:String,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given String type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : String, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../String.html\">String</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/string.cr","line_number":102,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L102"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_hash?(raw:Time,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:Time,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given Time type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Time, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Time.html\">Time</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/time.cr","line_number":87,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L87"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_hash?(raw:NamedTuple,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:NamedTuple,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : NamedTuple, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : NamedTuple, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":89,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L89"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if data = raw.as_h?\nelse\n  return\nend\ndata.each_with_object(Hash(String, T).new) do |__arg0, obj|\n  k = __arg0[0]\n  v = __arg0[1]\n  obj[k.to_s] = (cast(v, T)).as(T)\nend\n"}},{"id":"to_hash?(raw:JSON::Any,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:JSON::Any,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : JSON::Any, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":111,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L111"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if data = raw.as_h?\nelse\n  return\nend\ndata.each_with_object(Hash(String, T).new) do |__arg1, obj|\n  k = __arg1[0]\n  v = __arg1[1]\n  obj[k.to_s] = (cast(v, T)).as(T)\nend\n"}},{"id":"to_hash?(raw:Int,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:Int,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Int, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Int, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/int.cr","line_number":92,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L92"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_hash?(raw:Hash,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:Hash,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Hash, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Hash, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/hash.cr","line_number":94,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L94"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw"}},{"id":"to_hash?(raw:Float,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:Float,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Float, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Float, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/float.cr","line_number":87,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L87"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_hash?(raw:Bool,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:Bool,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Bool, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/bool.cr","line_number":87,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L87"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_hash?(raw:Array,value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(raw:Array,value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code>Hash</code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(raw : Array, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(raw : Array, value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":{"filename":"src/popcorn/cast/array.cr","line_number":86,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L86"},"def":{"name":"to_hash?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int(raw:YAML::Any)-instance-method","html_id":"to_int(raw:YAML::Any)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:Time)-instance-method","html_id":"to_int(raw:Time)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:Symbol)-instance-method","html_id":"to_int(raw:Symbol)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:String)-instance-method","html_id":"to_int(raw:String)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"String\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:Nil)-instance-method","html_id":"to_int(raw:Nil)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:NamedTuple)-instance-method","html_id":"to_int(raw:NamedTuple)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:JSON::Any)-instance-method","html_id":"to_int(raw:JSON::Any)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:Hash)-instance-method","html_id":"to_int(raw:Hash)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:Float)-instance-method","html_id":"to_int(raw:Float)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:Bool)-instance-method","html_id":"to_int(raw:Bool)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:Array)-instance-method","html_id":"to_int(raw:Array)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"Int\")\nend\nvalue\n"}},{"id":"to_int(raw:Int)-instance-method","html_id":"to_int(raw:Int)-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"Int\")\nend\nvalue\n"}},{"id":"to_int16(raw:String)-instance-method","html_id":"to_int16(raw:String)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"String\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:Array)-instance-method","html_id":"to_int16(raw:Array)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:Bool)-instance-method","html_id":"to_int16(raw:Bool)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:Float)-instance-method","html_id":"to_int16(raw:Float)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:Hash)-instance-method","html_id":"to_int16(raw:Hash)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:Int)-instance-method","html_id":"to_int16(raw:Int)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:JSON::Any)-instance-method","html_id":"to_int16(raw:JSON::Any)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:NamedTuple)-instance-method","html_id":"to_int16(raw:NamedTuple)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:Nil)-instance-method","html_id":"to_int16(raw:Nil)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:Symbol)-instance-method","html_id":"to_int16(raw:Symbol)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:YAML::Any)-instance-method","html_id":"to_int16(raw:YAML::Any)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16(raw:Time)-instance-method","html_id":"to_int16(raw:Time)-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int16?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"Int16\")\nend\nvalue\n"}},{"id":"to_int16?(raw:Int)-instance-method","html_id":"to_int16?(raw:Int)-instance-method","name":"to_int16?","doc":"Returns the `Int16` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":18,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L18"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_i16"}},{"id":"to_int16?(raw:Hash)-instance-method","html_id":"to_int16?(raw:Hash)-instance-method","name":"to_int16?","doc":"Returns the `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":18,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L18"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int16?(raw:Array)-instance-method","html_id":"to_int16?(raw:Array)-instance-method","name":"to_int16?","doc":"Returns the `Int16` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":18,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L18"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if raw.size == 1\n  return Popcorn.to_int16?(raw.first)\nend"}},{"id":"to_int16?(raw:Float)-instance-method","html_id":"to_int16?(raw:Float)-instance-method","name":"to_int16?","doc":"Returns the `Int16` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":18,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L18"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_i16"}},{"id":"to_int16?(raw:Bool)-instance-method","html_id":"to_int16?(raw:Bool)-instance-method","name":"to_int16?","doc":"Returns the `Int16` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":18,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L18"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw ? 1_i8 : 0_i16"}},{"id":"to_int16?(raw:JSON::Any)-instance-method","html_id":"to_int16?(raw:JSON::Any)-instance-method","name":"to_int16?","doc":"Returns the `Int16` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":22,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L22"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_int16?(value)\nend\n"}},{"id":"to_int16?(raw:NamedTuple)-instance-method","html_id":"to_int16?(raw:NamedTuple)-instance-method","name":"to_int16?","doc":"Returns the `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":18,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L18"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int16?(raw:Nil)-instance-method","html_id":"to_int16?(raw:Nil)-instance-method","name":"to_int16?","doc":"Returns the `Int16` or `Nil` value represented by given Nil type.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> or <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":18,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L18"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0_i16"}},{"id":"to_int16?(raw:String)-instance-method","html_id":"to_int16?(raw:String)-instance-method","name":"to_int16?","doc":"Returns the `Int16` or `Nil` value represented by given String type.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":20,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L20"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = raw.to_i16?(strict: false)\nvalue ? value : 0\n"}},{"id":"to_int16?(raw:Symbol)-instance-method","html_id":"to_int16?(raw:Symbol)-instance-method","name":"to_int16?","doc":"Returns the `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":18,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L18"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int16?(raw:Time)-instance-method","html_id":"to_int16?(raw:Time)-instance-method","name":"to_int16?","doc":"Returns the `Nil` value represented by given Time type.","summary":"<p>Returns the <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":18,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L18"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int16?(raw:YAML::Any)-instance-method","html_id":"to_int16?(raw:YAML::Any)-instance-method","name":"to_int16?","doc":"Returns the `Int16` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code><a href=\"../Int16.html\">Int16</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":22,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L22"},"def":{"name":"to_int16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_int16?(value)\nend\n"}},{"id":"to_int32(raw:YAML::Any)-instance-method","html_id":"to_int32(raw:YAML::Any)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:Time)-instance-method","html_id":"to_int32(raw:Time)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:Symbol)-instance-method","html_id":"to_int32(raw:Symbol)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:String)-instance-method","html_id":"to_int32(raw:String)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"String\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:Nil)-instance-method","html_id":"to_int32(raw:Nil)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:NamedTuple)-instance-method","html_id":"to_int32(raw:NamedTuple)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:JSON::Any)-instance-method","html_id":"to_int32(raw:JSON::Any)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:Int)-instance-method","html_id":"to_int32(raw:Int)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:Hash)-instance-method","html_id":"to_int32(raw:Hash)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:Float)-instance-method","html_id":"to_int32(raw:Float)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:Bool)-instance-method","html_id":"to_int32(raw:Bool)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32(raw:Array)-instance-method","html_id":"to_int32(raw:Array)-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int32?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"Int32\")\nend\nvalue\n"}},{"id":"to_int32?(raw:YAML::Any)-instance-method","html_id":"to_int32?(raw:YAML::Any)-instance-method","name":"to_int32?","doc":"Returns the `Int32` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":10,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L10"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_int?(value)\nend\n"}},{"id":"to_int32?(raw:Array)-instance-method","html_id":"to_int32?(raw:Array)-instance-method","name":"to_int32?","doc":"Returns the `Int32` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":8,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L8"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if raw.size == 1\n  return Popcorn.to_int32?(raw.first)\nend"}},{"id":"to_int32?(raw:Bool)-instance-method","html_id":"to_int32?(raw:Bool)-instance-method","name":"to_int32?","doc":"Returns the `Int32` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":8,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L8"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw ? 1 : 0"}},{"id":"to_int32?(raw:Float)-instance-method","html_id":"to_int32?(raw:Float)-instance-method","name":"to_int32?","doc":"Returns the `Int32` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":8,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L8"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_i32"}},{"id":"to_int32?(raw:Hash)-instance-method","html_id":"to_int32?(raw:Hash)-instance-method","name":"to_int32?","doc":"Returns the `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":8,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L8"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int32?(raw:Int)-instance-method","html_id":"to_int32?(raw:Int)-instance-method","name":"to_int32?","doc":"Returns the `Int32` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":8,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L8"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_i32"}},{"id":"to_int32?(raw:JSON::Any)-instance-method","html_id":"to_int32?(raw:JSON::Any)-instance-method","name":"to_int32?","doc":"Returns the `Int32` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":10,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L10"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_int32?(value)\nend\n"}},{"id":"to_int32?(raw:NamedTuple)-instance-method","html_id":"to_int32?(raw:NamedTuple)-instance-method","name":"to_int32?","doc":"Returns the `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":8,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L8"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int32?(raw:Nil)-instance-method","html_id":"to_int32?(raw:Nil)-instance-method","name":"to_int32?","doc":"Returns the `Int32` or `Nil` value represented by given Nil type.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> or <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":8,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L8"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0"}},{"id":"to_int32?(raw:Time)-instance-method","html_id":"to_int32?(raw:Time)-instance-method","name":"to_int32?","doc":"Returns the `Nil` value represented by given Time type.","summary":"<p>Returns the <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":8,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L8"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int32?(raw:String)-instance-method","html_id":"to_int32?(raw:String)-instance-method","name":"to_int32?","doc":"Returns the `Int32` or `Nil` value represented by given String type.","summary":"<p>Returns the <code><a href=\"../Int32.html\">Int32</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":8,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L8"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = raw.to_i?(strict: false)\nvalue ? value : 0\n"}},{"id":"to_int32?(raw:Symbol)-instance-method","html_id":"to_int32?(raw:Symbol)-instance-method","name":"to_int32?","doc":"Returns the `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":8,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L8"},"def":{"name":"to_int32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int64(raw:YAML::Any)-instance-method","html_id":"to_int64(raw:YAML::Any)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:Time)-instance-method","html_id":"to_int64(raw:Time)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:Array)-instance-method","html_id":"to_int64(raw:Array)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:Bool)-instance-method","html_id":"to_int64(raw:Bool)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:Float)-instance-method","html_id":"to_int64(raw:Float)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:Hash)-instance-method","html_id":"to_int64(raw:Hash)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:Int)-instance-method","html_id":"to_int64(raw:Int)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:JSON::Any)-instance-method","html_id":"to_int64(raw:JSON::Any)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:Nil)-instance-method","html_id":"to_int64(raw:Nil)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:String)-instance-method","html_id":"to_int64(raw:String)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"String\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:Symbol)-instance-method","html_id":"to_int64(raw:Symbol)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64(raw:NamedTuple)-instance-method","html_id":"to_int64(raw:NamedTuple)-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int64?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Int64\")\nend\nvalue\n"}},{"id":"to_int64?(raw:Int)-instance-method","html_id":"to_int64?(raw:Int)-instance-method","name":"to_int64?","doc":"Returns the `Int64` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":23,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L23"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_i64"}},{"id":"to_int64?(raw:NamedTuple)-instance-method","html_id":"to_int64?(raw:NamedTuple)-instance-method","name":"to_int64?","doc":"Returns the `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":23,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L23"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int64?(raw:JSON::Any)-instance-method","html_id":"to_int64?(raw:JSON::Any)-instance-method","name":"to_int64?","doc":"Returns the `Int64` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L28"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_int64?(value)\nend\n"}},{"id":"to_int64?(raw:String)-instance-method","html_id":"to_int64?(raw:String)-instance-method","name":"to_int64?","doc":"Returns the `Int64` or `Nil` value represented by given String type.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":26,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L26"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = raw.to_i64?(strict: false)\nvalue ? value : 0\n"}},{"id":"to_int64?(raw:Hash)-instance-method","html_id":"to_int64?(raw:Hash)-instance-method","name":"to_int64?","doc":"Returns the `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":23,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L23"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int64?(raw:Float)-instance-method","html_id":"to_int64?(raw:Float)-instance-method","name":"to_int64?","doc":"Returns the `Int64` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":23,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L23"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_i64"}},{"id":"to_int64?(raw:Bool)-instance-method","html_id":"to_int64?(raw:Bool)-instance-method","name":"to_int64?","doc":"Returns the `Int64` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":23,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L23"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw ? 1_i8 : 0_i64"}},{"id":"to_int64?(raw:Array)-instance-method","html_id":"to_int64?(raw:Array)-instance-method","name":"to_int64?","doc":"Returns the `Int64` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":23,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L23"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if raw.size == 1\n  return Popcorn.to_int64?(raw.first)\nend"}},{"id":"to_int64?(raw:Symbol)-instance-method","html_id":"to_int64?(raw:Symbol)-instance-method","name":"to_int64?","doc":"Returns the `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":23,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L23"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int64?(raw:Time)-instance-method","html_id":"to_int64?(raw:Time)-instance-method","name":"to_int64?","doc":"Returns the `Int64` or `Nil` value represented by given Time type.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> or <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":23,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L23"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_unix"}},{"id":"to_int64?(raw:Nil)-instance-method","html_id":"to_int64?(raw:Nil)-instance-method","name":"to_int64?","doc":"Returns the `Int64` or `Nil` value represented by given Nil type.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> or <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":23,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L23"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0_i64"}},{"id":"to_int64?(raw:YAML::Any)-instance-method","html_id":"to_int64?(raw:YAML::Any)-instance-method","name":"to_int64?","doc":"Returns the `Int64` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code><a href=\"../Int64.html\">Int64</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L28"},"def":{"name":"to_int64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_int64?(value)\nend\n"}},{"id":"to_int8(raw:Bool)-instance-method","html_id":"to_int8(raw:Bool)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:Float)-instance-method","html_id":"to_int8(raw:Float)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:Hash)-instance-method","html_id":"to_int8(raw:Hash)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:Int)-instance-method","html_id":"to_int8(raw:Int)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:JSON::Any)-instance-method","html_id":"to_int8(raw:JSON::Any)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:NamedTuple)-instance-method","html_id":"to_int8(raw:NamedTuple)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:Nil)-instance-method","html_id":"to_int8(raw:Nil)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:String)-instance-method","html_id":"to_int8(raw:String)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"String\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:Symbol)-instance-method","html_id":"to_int8(raw:Symbol)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:Array)-instance-method","html_id":"to_int8(raw:Array)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:Time)-instance-method","html_id":"to_int8(raw:Time)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8(raw:YAML::Any)-instance-method","html_id":"to_int8(raw:YAML::Any)-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_int8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_int8?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Int8\")\nend\nvalue\n"}},{"id":"to_int8?(raw:Array)-instance-method","html_id":"to_int8?(raw:Array)-instance-method","name":"to_int8?","doc":"Returns the `Int8` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":13,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L13"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if raw.size == 1\n  return Popcorn.to_int8?(raw.first)\nend"}},{"id":"to_int8?(raw:Bool)-instance-method","html_id":"to_int8?(raw:Bool)-instance-method","name":"to_int8?","doc":"Returns the `Int8` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":13,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L13"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw ? 1_i8 : 0_i8"}},{"id":"to_int8?(raw:Float)-instance-method","html_id":"to_int8?(raw:Float)-instance-method","name":"to_int8?","doc":"Returns the `Int8` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":13,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L13"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_i8"}},{"id":"to_int8?(raw:Hash)-instance-method","html_id":"to_int8?(raw:Hash)-instance-method","name":"to_int8?","doc":"Returns the `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":13,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L13"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int8?(raw:Int)-instance-method","html_id":"to_int8?(raw:Int)-instance-method","name":"to_int8?","doc":"Returns the `Int8` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":13,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L13"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_i8"}},{"id":"to_int8?(raw:JSON::Any)-instance-method","html_id":"to_int8?(raw:JSON::Any)-instance-method","name":"to_int8?","doc":"Returns the `Int8` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":16,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L16"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_int8?(value)\nend\n"}},{"id":"to_int8?(raw:NamedTuple)-instance-method","html_id":"to_int8?(raw:NamedTuple)-instance-method","name":"to_int8?","doc":"Returns the `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":13,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L13"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int8?(raw:Nil)-instance-method","html_id":"to_int8?(raw:Nil)-instance-method","name":"to_int8?","doc":"Returns the `Int8` or `Nil` value represented by given Nil type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":13,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L13"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0_i8"}},{"id":"to_int8?(raw:String)-instance-method","html_id":"to_int8?(raw:String)-instance-method","name":"to_int8?","doc":"Returns the `Int8` or `Nil` value represented by given String type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":14,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L14"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = raw.to_i8?(strict: false)\nvalue ? value : 0\n"}},{"id":"to_int8?(raw:Symbol)-instance-method","html_id":"to_int8?(raw:Symbol)-instance-method","name":"to_int8?","doc":"Returns the `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":13,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L13"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int8?(raw:Time)-instance-method","html_id":"to_int8?(raw:Time)-instance-method","name":"to_int8?","doc":"Returns the `Nil` value represented by given Time type.","summary":"<p>Returns the <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":13,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L13"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_int8?(raw:YAML::Any)-instance-method","html_id":"to_int8?(raw:YAML::Any)-instance-method","name":"to_int8?","doc":"Returns the `Int8` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":16,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L16"},"def":{"name":"to_int8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_int8?(value)\nend\n"}},{"id":"to_int?(raw:YAML::Any)-instance-method","html_id":"to_int?(raw:YAML::Any)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":5,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L5"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:Array)-instance-method","html_id":"to_int?(raw:Array)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L3"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:Bool)-instance-method","html_id":"to_int?(raw:Bool)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L3"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:Float)-instance-method","html_id":"to_int?(raw:Float)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L3"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:Hash)-instance-method","html_id":"to_int?(raw:Hash)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L3"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:Int)-instance-method","html_id":"to_int?(raw:Int)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L3"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:JSON::Any)-instance-method","html_id":"to_int?(raw:JSON::Any)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":5,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L5"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:NamedTuple)-instance-method","html_id":"to_int?(raw:NamedTuple)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L3"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:Nil)-instance-method","html_id":"to_int?(raw:Nil)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L3"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:String)-instance-method","html_id":"to_int?(raw:String)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L3"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:Symbol)-instance-method","html_id":"to_int?(raw:Symbol)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L3"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_int?(raw:Time)-instance-method","html_id":"to_int?(raw:Time)-instance-method","name":"to_int?","doc":"Alias to `to_int32?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_int32?(raw:YAML::Any)-instance-method\">#to_int32?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":3,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L3"},"def":{"name":"to_int?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_int32?(raw)"}},{"id":"to_string(raw:YAML::Any)-instance-method","html_id":"to_string(raw:YAML::Any)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:JSON::Any)-instance-method","html_id":"to_string(raw:JSON::Any)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:Symbol)-instance-method","html_id":"to_string(raw:Symbol)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:String)-instance-method","html_id":"to_string(raw:String)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:Nil)-instance-method","html_id":"to_string(raw:Nil)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:NamedTuple)-instance-method","html_id":"to_string(raw:NamedTuple)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:Time)-instance-method","html_id":"to_string(raw:Time)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:Int)-instance-method","html_id":"to_string(raw:Int)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:Hash)-instance-method","html_id":"to_string(raw:Hash)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:Float)-instance-method","html_id":"to_string(raw:Float)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:Bool)-instance-method","html_id":"to_string(raw:Bool)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_string(raw:Array)-instance-method","html_id":"to_string(raw:Array)-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_string","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_s"}},{"id":"to_time(raw:Array,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:Array,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Array, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : Array, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"Array\", \"Time\")\nend\nvalue\n"}},{"id":"to_time(raw:Bool,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:Bool,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Bool, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"Bool\", \"Time\")\nend\nvalue\n"}},{"id":"to_time(raw:Float,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:Float,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Float, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : Float, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"Float\", \"Time\")\nend\nvalue\n"}},{"id":"to_time(raw:Hash,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:Hash,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Hash, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : Hash, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"Hash\", \"Time\")\nend\nvalue\n"}},{"id":"to_time(raw:Int,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:Int,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Int, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : Int, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"Int\", \"Time\")\nend\nvalue\n"}},{"id":"to_time(raw:JSON::Any,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:JSON::Any,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : JSON::Any, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"Time\")\nend\nvalue\n"}},{"id":"to_time(raw:Nil,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:Nil,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Nil, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : Nil, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"Nil\", \"Time\")\nend\nvalue\n"}},{"id":"to_time(raw:String,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:String,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : String, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../String.html\">String</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"String\", \"Time\")\nend\nvalue\n"}},{"id":"to_time(raw:Symbol,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:Symbol,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Symbol, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"Symbol\", \"Time\")\nend\nvalue\n"}},{"id":"to_time(raw:Time,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:Time,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Time, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../Time.html\">Time</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"Time\", \"Time\")\nend\nvalue\n"}},{"id":"to_time(raw:YAML::Any,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(raw:YAML::Any,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : YAML::Any, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_time","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_time?(raw, location, formatters)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"Time\")\nend\nvalue\n"}},{"id":"to_time?(raw:YAML::Any,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:YAML::Any,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` or `Nil` value represented by given YAML::Any type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : YAML::Any, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":83,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L83"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_time?(value, location, formatters)\nend\n"}},{"id":"to_time?(raw:Symbol,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:Symbol,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Nil` value represented by given Symbol type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Symbol, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":71,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L71"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_time?(raw:String,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:String,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` or `Nil` value represented by given String type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : String, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../String.html\">String</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":81,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L81"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parse_time(raw, location, formatters)"}},{"id":"to_time?(raw:Nil,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:Nil,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Nil` value represented by given Nil type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Nil, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : Nil, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":71,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L71"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_time?(raw:JSON::Any,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:JSON::Any,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` or `Nil` value represented by given JSON::Any type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : JSON::Any, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":83,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L83"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_time?(value, location, formatters)\nend\n"}},{"id":"to_time?(raw:Int,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:Int,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` or `Nil` value represented by given Int type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Int, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : Int, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/int.cr","line_number":71,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L71"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"v = raw.to_i64\nif (Math.log10(raw)) > 10\n  location ? Time.unix_ms(v, location: location) : Time.unix_ms(raw)\nelse\n  location ? Time.unix(v, location: location) : Time.unix(raw)\nend\n"}},{"id":"to_time?(raw:Hash,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:Hash,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Nil` value represented by given Hash type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Hash, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : Hash, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":71,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L71"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_time?(raw:Float,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:Float,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Nil` value represented by given Float type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Float, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : Float, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/float.cr","line_number":71,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L71"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_time?(raw:Bool,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:Bool,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Nil` value represented by given Bool type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Bool, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":71,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L71"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_time?(raw:Array,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:Array,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Nil` value represented by given NamedTuple type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Array, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : Array, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":71,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L71"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_time?(raw:Time,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(raw:Time,location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` or `Nil` value represented by given Time type.\n\n- `location` argument applies for `Int`/`String` types\n- `formatters` argument applies for `String` type.","summary":"<p>Returns the <code><a href=\"../Time.html\">Time</a></code> or <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(raw : Time, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(raw : <a href=\"../Time.html\">Time</a>, location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"../String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":71,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L71"},"def":{"name":"to_time?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"},{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw"}},{"id":"to_uint(raw:Symbol)-instance-method","html_id":"to_uint(raw:Symbol)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:Bool)-instance-method","html_id":"to_uint(raw:Bool)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:Array)-instance-method","html_id":"to_uint(raw:Array)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:Float)-instance-method","html_id":"to_uint(raw:Float)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:Hash)-instance-method","html_id":"to_uint(raw:Hash)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:Int)-instance-method","html_id":"to_uint(raw:Int)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:JSON::Any)-instance-method","html_id":"to_uint(raw:JSON::Any)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:NamedTuple)-instance-method","html_id":"to_uint(raw:NamedTuple)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:Nil)-instance-method","html_id":"to_uint(raw:Nil)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:String)-instance-method","html_id":"to_uint(raw:String)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"String\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:Time)-instance-method","html_id":"to_uint(raw:Time)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint(raw:YAML::Any)-instance-method","html_id":"to_uint(raw:YAML::Any)-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"UInt\")\nend\nvalue\n"}},{"id":"to_uint16(raw:YAML::Any)-instance-method","html_id":"to_uint16(raw:YAML::Any)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:Time)-instance-method","html_id":"to_uint16(raw:Time)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:Symbol)-instance-method","html_id":"to_uint16(raw:Symbol)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:String)-instance-method","html_id":"to_uint16(raw:String)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"String\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:Nil)-instance-method","html_id":"to_uint16(raw:Nil)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:NamedTuple)-instance-method","html_id":"to_uint16(raw:NamedTuple)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:JSON::Any)-instance-method","html_id":"to_uint16(raw:JSON::Any)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:Int)-instance-method","html_id":"to_uint16(raw:Int)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:Hash)-instance-method","html_id":"to_uint16(raw:Hash)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:Float)-instance-method","html_id":"to_uint16(raw:Float)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:Bool)-instance-method","html_id":"to_uint16(raw:Bool)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16(raw:Array)-instance-method","html_id":"to_uint16(raw:Array)-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint16","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint16?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"UInt16\")\nend\nvalue\n"}},{"id":"to_uint16?(raw:YAML::Any)-instance-method","html_id":"to_uint16?(raw:YAML::Any)-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":51,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L51"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_uint16?(value)\nend\n"}},{"id":"to_uint16?(raw:Time)-instance-method","html_id":"to_uint16?(raw:Time)-instance-method","name":"to_uint16?","doc":"Returns the `Nil` value represented by given Time type.","summary":"<p>Returns the <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":43,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L43"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint16?(raw:Symbol)-instance-method","html_id":"to_uint16?(raw:Symbol)-instance-method","name":"to_uint16?","doc":"Returns the `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":43,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L43"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint16?(raw:String)-instance-method","html_id":"to_uint16?(raw:String)-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` or `Nil` value represented by given String type.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":49,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L49"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = raw.to_u16?(strict: false)\nvalue ? value : 0\n"}},{"id":"to_uint16?(raw:Nil)-instance-method","html_id":"to_uint16?(raw:Nil)-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` or `Nil` value represented by given Nil type.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> or <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":43,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L43"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0_u16"}},{"id":"to_uint16?(raw:NamedTuple)-instance-method","html_id":"to_uint16?(raw:NamedTuple)-instance-method","name":"to_uint16?","doc":"Returns the `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":43,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L43"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint16?(raw:JSON::Any)-instance-method","html_id":"to_uint16?(raw:JSON::Any)-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":51,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L51"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_uint16?(value)\nend\n"}},{"id":"to_uint16?(raw:Int)-instance-method","html_id":"to_uint16?(raw:Int)-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":43,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L43"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_u16"}},{"id":"to_uint16?(raw:Hash)-instance-method","html_id":"to_uint16?(raw:Hash)-instance-method","name":"to_uint16?","doc":"Returns the `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":43,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L43"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint16?(raw:Float)-instance-method","html_id":"to_uint16?(raw:Float)-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":43,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L43"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_u16"}},{"id":"to_uint16?(raw:Bool)-instance-method","html_id":"to_uint16?(raw:Bool)-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":43,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L43"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw ? 1_i8 : 0_u16"}},{"id":"to_uint16?(raw:Array)-instance-method","html_id":"to_uint16?(raw:Array)-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../UInt16.html\">UInt16</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":43,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L43"},"def":{"name":"to_uint16?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if raw.size == 1\n  return Popcorn.to_uint16?(raw.first)\nend"}},{"id":"to_uint32(raw:Symbol)-instance-method","html_id":"to_uint32(raw:Symbol)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:Array)-instance-method","html_id":"to_uint32(raw:Array)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:Bool)-instance-method","html_id":"to_uint32(raw:Bool)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:Float)-instance-method","html_id":"to_uint32(raw:Float)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:Hash)-instance-method","html_id":"to_uint32(raw:Hash)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:Int)-instance-method","html_id":"to_uint32(raw:Int)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:JSON::Any)-instance-method","html_id":"to_uint32(raw:JSON::Any)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:NamedTuple)-instance-method","html_id":"to_uint32(raw:NamedTuple)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:Nil)-instance-method","html_id":"to_uint32(raw:Nil)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:String)-instance-method","html_id":"to_uint32(raw:String)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"String\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:YAML::Any)-instance-method","html_id":"to_uint32(raw:YAML::Any)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32(raw:Time)-instance-method","html_id":"to_uint32(raw:Time)-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint32","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint32?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"UInt32\")\nend\nvalue\n"}},{"id":"to_uint32?(raw:YAML::Any)-instance-method","html_id":"to_uint32?(raw:YAML::Any)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":39,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L39"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_uint32?(value)\nend\n"}},{"id":"to_uint32?(raw:Symbol)-instance-method","html_id":"to_uint32?(raw:Symbol)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":33,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L33"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint32?(raw:String)-instance-method","html_id":"to_uint32?(raw:String)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":37,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L37"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = raw.to_i?(strict: false)\nvalue ? value : 0\n"}},{"id":"to_uint32?(raw:Nil)-instance-method","html_id":"to_uint32?(raw:Nil)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":33,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L33"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0_u32"}},{"id":"to_uint32?(raw:NamedTuple)-instance-method","html_id":"to_uint32?(raw:NamedTuple)-instance-method","name":"to_uint32?","doc":"Returns the `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":33,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L33"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint32?(raw:JSON::Any)-instance-method","html_id":"to_uint32?(raw:JSON::Any)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":39,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L39"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_uint32?(value)\nend\n"}},{"id":"to_uint32?(raw:Int)-instance-method","html_id":"to_uint32?(raw:Int)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":33,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L33"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_u32"}},{"id":"to_uint32?(raw:Hash)-instance-method","html_id":"to_uint32?(raw:Hash)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":33,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L33"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint32?(raw:Float)-instance-method","html_id":"to_uint32?(raw:Float)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":33,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L33"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_u32"}},{"id":"to_uint32?(raw:Bool)-instance-method","html_id":"to_uint32?(raw:Bool)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":33,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L33"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw ? 1_i8 : 0_u32"}},{"id":"to_uint32?(raw:Array)-instance-method","html_id":"to_uint32?(raw:Array)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":33,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L33"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if raw.size == 1\n  return Popcorn.to_uint32?(raw.first)\nend"}},{"id":"to_uint32?(raw:Time)-instance-method","html_id":"to_uint32?(raw:Time)-instance-method","name":"to_uint32?","doc":"Alias to `to_uint?`","summary":"<p>Alias to <code><a href=\"../Popcorn/Cast.html#to_uint?(raw:Bool)-instance-method\">#to_uint?</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":33,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L33"},"def":{"name":"to_uint32?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint64(raw:Nil)-instance-method","html_id":"to_uint64(raw:Nil)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:YAML::Any)-instance-method","html_id":"to_uint64(raw:YAML::Any)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:Time)-instance-method","html_id":"to_uint64(raw:Time)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:Symbol)-instance-method","html_id":"to_uint64(raw:Symbol)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:Array)-instance-method","html_id":"to_uint64(raw:Array)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:Bool)-instance-method","html_id":"to_uint64(raw:Bool)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:Float)-instance-method","html_id":"to_uint64(raw:Float)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:Hash)-instance-method","html_id":"to_uint64(raw:Hash)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:NamedTuple)-instance-method","html_id":"to_uint64(raw:NamedTuple)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:JSON::Any)-instance-method","html_id":"to_uint64(raw:JSON::Any)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:Int)-instance-method","html_id":"to_uint64(raw:Int)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64(raw:String)-instance-method","html_id":"to_uint64(raw:String)-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint64","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint64?(raw)\nif value.nil?\n  cast_error!(\"String\", \"UInt64\")\nend\nvalue\n"}},{"id":"to_uint64?(raw:Array)-instance-method","html_id":"to_uint64?(raw:Array)-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":48,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L48"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if raw.size == 1\n  return Popcorn.to_uint64?(raw.first)\nend"}},{"id":"to_uint64?(raw:Bool)-instance-method","html_id":"to_uint64?(raw:Bool)-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":48,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L48"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw ? 1_i8 : 0_u64"}},{"id":"to_uint64?(raw:Float)-instance-method","html_id":"to_uint64?(raw:Float)-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":48,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L48"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_u64"}},{"id":"to_uint64?(raw:Int)-instance-method","html_id":"to_uint64?(raw:Int)-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":48,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L48"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_u64"}},{"id":"to_uint64?(raw:JSON::Any)-instance-method","html_id":"to_uint64?(raw:JSON::Any)-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":57,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L57"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_uint64?(value)\nend\n"}},{"id":"to_uint64?(raw:NamedTuple)-instance-method","html_id":"to_uint64?(raw:NamedTuple)-instance-method","name":"to_uint64?","doc":"Returns the `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":48,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L48"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint64?(raw:Nil)-instance-method","html_id":"to_uint64?(raw:Nil)-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` or `Nil` value represented by given Nil type.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> or <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":48,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L48"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0_u64"}},{"id":"to_uint64?(raw:String)-instance-method","html_id":"to_uint64?(raw:String)-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` or `Nil` value represented by given String type.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":55,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L55"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = raw.to_u64?(strict: false)\nvalue ? value : 0\n"}},{"id":"to_uint64?(raw:Symbol)-instance-method","html_id":"to_uint64?(raw:Symbol)-instance-method","name":"to_uint64?","doc":"Returns the `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":48,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L48"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint64?(raw:Time)-instance-method","html_id":"to_uint64?(raw:Time)-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` or `Nil` value represented by given Time type.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> or <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":48,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L48"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_unix"}},{"id":"to_uint64?(raw:Hash)-instance-method","html_id":"to_uint64?(raw:Hash)-instance-method","name":"to_uint64?","doc":"Returns the `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":48,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L48"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint64?(raw:YAML::Any)-instance-method","html_id":"to_uint64?(raw:YAML::Any)-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code><a href=\"../UInt64.html\">UInt64</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":57,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L57"},"def":{"name":"to_uint64?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_uint64?(value)\nend\n"}},{"id":"to_uint8(raw:YAML::Any)-instance-method","html_id":"to_uint8(raw:YAML::Any)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"../YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"YAML::Any\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:Time)-instance-method","html_id":"to_uint8(raw:Time)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `Time` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"../Time.html\">Time</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"Time\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:Array)-instance-method","html_id":"to_uint8(raw:Array)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `Array` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code>Array</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"Array\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:Bool)-instance-method","html_id":"to_uint8(raw:Bool)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `Bool` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"../Bool.html\">Bool</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"Bool\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:Float)-instance-method","html_id":"to_uint8(raw:Float)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `Float` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code>Float</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"Float\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:Hash)-instance-method","html_id":"to_uint8(raw:Hash)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `Hash` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code>Hash</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"Hash\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:Int)-instance-method","html_id":"to_uint8(raw:Int)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `Int` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code>Int</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"Int\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:JSON::Any)-instance-method","html_id":"to_uint8(raw:JSON::Any)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `JSON::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"../JSON/Any.html\">JSON::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"JSON::Any\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:NamedTuple)-instance-method","html_id":"to_uint8(raw:NamedTuple)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `NamedTuple` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code>NamedTuple</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"NamedTuple\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:Nil)-instance-method","html_id":"to_uint8(raw:Nil)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `Nil` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code>Nil</code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"Nil\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:String)-instance-method","html_id":"to_uint8(raw:String)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `String` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"../String.html\">String</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"String\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8(raw:Symbol)-instance-method","html_id":"to_uint8(raw:Symbol)-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `Symbol` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"../UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"../Symbol.html\">Symbol</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast.cr","line_number":129,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L129"},"def":{"name":"to_uint8","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = to_uint8?(raw)\nif value.nil?\n  cast_error!(\"Symbol\", \"UInt8\")\nend\nvalue\n"}},{"id":"to_uint8?(raw:YAML::Any)-instance-method","html_id":"to_uint8?(raw:YAML::Any)-instance-method","name":"to_uint8?","doc":"Returns the `Int8` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":45,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L45"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = as_value(raw)\nif value.nil?\nelse\n  to_uint8?(value)\nend\n"}},{"id":"to_uint8?(raw:Array)-instance-method","html_id":"to_uint8?(raw:Array)-instance-method","name":"to_uint8?","doc":"Returns the `Int8` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":38,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L38"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if raw.size == 1\n  return Popcorn.to_uint8?(raw.first)\nend"}},{"id":"to_uint8?(raw:Bool)-instance-method","html_id":"to_uint8?(raw:Bool)-instance-method","name":"to_uint8?","doc":"Returns the `Int8` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":38,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L38"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw ? 1_i8 : 0_u8"}},{"id":"to_uint8?(raw:Float)-instance-method","html_id":"to_uint8?(raw:Float)-instance-method","name":"to_uint8?","doc":"Returns the `Int8` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":38,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L38"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_u8"}},{"id":"to_uint8?(raw:Hash)-instance-method","html_id":"to_uint8?(raw:Hash)-instance-method","name":"to_uint8?","doc":"Returns the `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":38,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L38"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint8?(raw:Int)-instance-method","html_id":"to_uint8?(raw:Int)-instance-method","name":"to_uint8?","doc":"Returns the `Int8` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":38,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L38"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_u8"}},{"id":"to_uint8?(raw:JSON::Any)-instance-method","html_id":"to_uint8?(raw:JSON::Any)-instance-method","name":"to_uint8?","doc":"Returns the `Int8` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":45,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L45"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = find(raw)\nif value.nil?\nelse\n  to_uint8?(value)\nend\n"}},{"id":"to_uint8?(raw:NamedTuple)-instance-method","html_id":"to_uint8?(raw:NamedTuple)-instance-method","name":"to_uint8?","doc":"Returns the `Nil` value represented by given NamedTuple type.","summary":"<p>Returns the <code>Nil</code> value represented by given NamedTuple type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":38,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L38"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint8?(raw:Nil)-instance-method","html_id":"to_uint8?(raw:Nil)-instance-method","name":"to_uint8?","doc":"Returns the `Int8` or `Nil` value represented by given Nil type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":38,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L38"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"0_u8"}},{"id":"to_uint8?(raw:String)-instance-method","html_id":"to_uint8?(raw:String)-instance-method","name":"to_uint8?","doc":"Returns the `Int8` or `Nil` value represented by given String type.","summary":"<p>Returns the <code><a href=\"../Int8.html\">Int8</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":43,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L43"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value = raw.to_u8?(strict: false)\nvalue ? value : 0\n"}},{"id":"to_uint8?(raw:Symbol)-instance-method","html_id":"to_uint8?(raw:Symbol)-instance-method","name":"to_uint8?","doc":"Returns the `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":38,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L38"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint8?(raw:Time)-instance-method","html_id":"to_uint8?(raw:Time)-instance-method","name":"to_uint8?","doc":"Returns the `Nil` value represented by given Time type.","summary":"<p>Returns the <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":38,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L38"},"def":{"name":"to_uint8?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"nil"}},{"id":"to_uint?(raw:Bool)-instance-method","html_id":"to_uint?(raw:Bool)-instance-method","name":"to_uint?","doc":"Returns the `UInt32` or `Nil` value represented by given Bool type.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> or <code>Nil</code> value represented by given Bool type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"args_string":"(raw : Bool)","args_html":"(raw : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/popcorn/cast/bool.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/bool.cr#L28"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:Array)-instance-method","html_id":"to_uint?(raw:Array)-instance-method","name":"to_uint?","doc":"Returns the `UInt32` or `Nil` value represented by given Array type.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> or <code>Nil</code> value represented by given Array type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"args_string":"(raw : Array)","args_html":"(raw : Array)","location":{"filename":"src/popcorn/cast/array.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/array.cr#L28"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:Hash)-instance-method","html_id":"to_uint?(raw:Hash)-instance-method","name":"to_uint?","doc":"Returns the `Nil` value represented by given Hash type.","summary":"<p>Returns the <code>Nil</code> value represented by given Hash type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"args_string":"(raw : Hash)","args_html":"(raw : Hash)","location":{"filename":"src/popcorn/cast/hash.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/hash.cr#L28"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:Int)-instance-method","html_id":"to_uint?(raw:Int)-instance-method","name":"to_uint?","doc":"Returns the `UInt32` or `Nil` value represented by given Int type.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> or <code>Nil</code> value represented by given Int type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"args_string":"(raw : Int)","args_html":"(raw : Int)","location":{"filename":"src/popcorn/cast/int.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L28"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:JSON::Any)-instance-method","html_id":"to_uint?(raw:JSON::Any)-instance-method","name":"to_uint?","doc":"Returns the `UInt32` or `Nil` value represented by given JSON::Any type.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> or <code>Nil</code> value represented by given JSON::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"args_string":"(raw : JSON::Any)","args_html":"(raw : <a href=\"../JSON/Any.html\">JSON::Any</a>)","location":{"filename":"src/popcorn/cast/json_any.cr","line_number":34,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/json_any.cr#L34"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"JSON::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:NamedTuple)-instance-method","html_id":"to_uint?(raw:NamedTuple)-instance-method","name":"to_uint?","doc":"Aliase to `to_uint32`","summary":"<p>Aliase to <code><a href=\"../Popcorn/Cast.html#to_uint32(raw:Symbol)-instance-method\">#to_uint32</a></code></p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"args_string":"(raw : NamedTuple)","args_html":"(raw : NamedTuple)","location":{"filename":"src/popcorn/cast/named_tuple.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/named_tuple.cr#L28"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"NamedTuple"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:Nil)-instance-method","html_id":"to_uint?(raw:Nil)-instance-method","name":"to_uint?","doc":"Returns the `UInt32` or `Nil` value represented by given Nil type.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> or <code>Nil</code> value represented by given Nil type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"args_string":"(raw : Nil)","args_html":"(raw : Nil)","location":{"filename":"src/popcorn/cast/nil.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/nil.cr#L28"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:String)-instance-method","html_id":"to_uint?(raw:String)-instance-method","name":"to_uint?","doc":"Returns the `UInt32` or `Nil` value represented by given String type.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> or <code>Nil</code> value represented by given String type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"args_string":"(raw : String)","args_html":"(raw : <a href=\"../String.html\">String</a>)","location":{"filename":"src/popcorn/cast/string.cr","line_number":32,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/string.cr#L32"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:Symbol)-instance-method","html_id":"to_uint?(raw:Symbol)-instance-method","name":"to_uint?","doc":"Returns the `Nil` value represented by given Symbol type.","summary":"<p>Returns the <code>Nil</code> value represented by given Symbol type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"args_string":"(raw : Symbol)","args_html":"(raw : <a href=\"../Symbol.html\">Symbol</a>)","location":{"filename":"src/popcorn/cast/symbol.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/symbol.cr#L28"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:Time)-instance-method","html_id":"to_uint?(raw:Time)-instance-method","name":"to_uint?","doc":"Returns the `UInt32` or `Nil` value represented by given Time type.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> or <code>Nil</code> value represented by given Time type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"args_string":"(raw : Time)","args_html":"(raw : <a href=\"../Time.html\">Time</a>)","location":{"filename":"src/popcorn/cast/time.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/time.cr#L28"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Time"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:YAML::Any)-instance-method","html_id":"to_uint?(raw:YAML::Any)-instance-method","name":"to_uint?","doc":"Returns the `UInt32` or `Nil` value represented by given YAML::Any type.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> or <code>Nil</code> value represented by given YAML::Any type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"args_string":"(raw : YAML::Any)","args_html":"(raw : <a href=\"../YAML/Any.html\">YAML::Any</a>)","location":{"filename":"src/popcorn/cast/yaml_any.cr","line_number":34,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/yaml_any.cr#L34"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"YAML::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}},{"id":"to_uint?(raw:Float)-instance-method","html_id":"to_uint?(raw:Float)-instance-method","name":"to_uint?","doc":"Returns the `UInt32` or `Nil` value represented by given Float type.","summary":"<p>Returns the <code><a href=\"../UInt32.html\">UInt32</a></code> or <code>Nil</code> value represented by given Float type.</p>","abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"args_string":"(raw : Float)","args_html":"(raw : Float)","location":{"filename":"src/popcorn/cast/float.cr","line_number":28,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/float.cr#L28"},"def":{"name":"to_uint?","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Float"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_uint32?(raw)"}}],"macros":[{"id":"generate!-macro","html_id":"generate!-macro","name":"generate!","doc":"Generate to `to_xxx` methods from `to_xxx?`.","summary":"<p>Generate to <code>to_xxx</code> methods from <code>to_xxx?</code>.</p>","abstract":false,"args":[],"args_string":"","location":{"filename":"src/popcorn/cast.cr","line_number":101,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast.cr#L101"},"def":{"name":"generate!","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      \n{% if true %}\n        {% for method in @type.methods %}\n          {% if method.name.starts_with?(\"to_\") %}\n            {% mname = method.name.tr(\"?\", \"\") %}\n            {% margs = method.args.map do |a|\n  s = \"#{a.name.id} : #{a.restriction.id}\"\n  if (a.default_value == nil) || a.default_value\n    s = \"#{s.id} = #{a.default_value}\"\n  end\n  s\nend.join(\", \") %}\n            {% rtype = method.args[0].restriction %}\n            {% mtype = ((method.name.gsub(/^to_/, \"\")).gsub(/\\?$/, \"\")).capitalize.gsub(/^Ui/, \"UI\") %}\n\n            {% if @type.methods.select do |m|\n  (m.name.id == mname.id) && (m.args[0].restriction.id == rtype.id)\nend.size == 0 %}\n              # Returns the `{{ mtype.id }}` value represented by given `{{ rtype.id }}` type, else raise a `TypeCastError` exception.\n              def {{ mname.id }}({{ margs.id }}){% if (mname.includes?(\"to_array\")) || (mname.includes?(\"to_hash\")) %} forall T{% end %}\n                value = {{ method.name }}({{ (method.args.map do |a|\n  a.name\nend.join(\", \")).id }})\n                cast_error!({{ rtype.id.stringify }}, {{ mtype.id.stringify }}) if value.nil?\n                value\n              end\n            {% end %}\n\n            {% if @type.methods.select do |m|\n  (m.name.id == \"to_string\".id) && (m.args[0].restriction.id == rtype.id)\nend.size == 0 %}\n              def to_string({{ method.args[0].name.id }} : {{ method.args[0].restriction.id }})\n                {{ method.args[0].name.id }}.to_s\n              end\n            {% end %}\n          {% end %}\n        {% end %}\n      {% end %}\n\n    \n"}}],"types":[]}]},{"html_id":"popcorn/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"popcorn/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`String` cast methods","summary":"<p><code><a href=\"String.html\">String</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/Symbol","path":"Symbol.html","kind":"struct","full_name":"Symbol","name":"Symbol","abstract":false,"superclass":{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Symbol` cast methods","summary":"<p><code><a href=\"Symbol.html\">Symbol</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/Time","path":"Time.html","kind":"struct","full_name":"Time","name":"Time","abstract":false,"superclass":{"html_id":"popcorn/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/popcorn/cast/int.cr","line_number":97,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L97"}],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Time` cast methods","summary":"<p><code><a href=\"Time.html\">Time</a></code> cast methods</p>","class_methods":[],"constructors":[{"id":"unix(seconds:Int,location=Location::UTC):Time-class-method","html_id":"unix(seconds:Int,location=Location::UTC):Time-class-method","name":"unix","doc":"Creates a new `Time` instance that corresponds to the number of\n*seconds* elapsed since the Unix epoch (`1970-01-01 00:00:00 UTC`).\n\nThe time zone is always UTC.\n\n```\nTime.unix(981173106) # => 2001-02-03 04:05:06 UTC\n```","summary":"<p>Creates a new <code><a href=\"Time.html\">Time</a></code> instance that corresponds to the number of <em>seconds</em> elapsed since the Unix epoch (<code>1970-01-01 00:00:00 UTC</code>).</p>","abstract":false,"args":[{"name":"seconds","doc":null,"default_value":"","external_name":"seconds","restriction":"Int"},{"name":"location","doc":null,"default_value":"Location::UTC","external_name":"location","restriction":""}],"args_string":"(seconds : Int, location = <span class=\"t\">Location</span><span class=\"t\">::</span><span class=\"t\">UTC</span>) : Time","args_html":"(seconds : Int, location = <span class=\"t\">Location</span><span class=\"t\">::</span><span class=\"t\">UTC</span>) : <a href=\"Time.html\">Time</a>","location":{"filename":"src/popcorn/cast/int.cr","line_number":98,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L98"},"def":{"name":"unix","args":[{"name":"seconds","doc":null,"default_value":"","external_name":"seconds","restriction":"Int"},{"name":"location","doc":null,"default_value":"Location::UTC","external_name":"location","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"new(seconds: UNIX_EPOCH.total_seconds + seconds, nanoseconds: 0, location: location)"}},{"id":"unix_ms(milliseconds:Int,location=Location::UTC):Time-class-method","html_id":"unix_ms(milliseconds:Int,location=Location::UTC):Time-class-method","name":"unix_ms","doc":"Creates a new `Time` instance that corresponds to the number of\n*milliseconds* elapsed since the Unix epoch (`1970-01-01 00:00:00 UTC`).\n\nThe time zone is always UTC.\n\n```\ntime = Time.unix_ms(981173106789) # => 2001-02-03 04:05:06.789 UTC\ntime.millisecond                  # => 789\n```","summary":"<p>Creates a new <code><a href=\"Time.html\">Time</a></code> instance that corresponds to the number of <em>milliseconds</em> elapsed since the Unix epoch (<code>1970-01-01 00:00:00 UTC</code>).</p>","abstract":false,"args":[{"name":"milliseconds","doc":null,"default_value":"","external_name":"milliseconds","restriction":"Int"},{"name":"location","doc":null,"default_value":"Location::UTC","external_name":"location","restriction":""}],"args_string":"(milliseconds : Int, location = <span class=\"t\">Location</span><span class=\"t\">::</span><span class=\"t\">UTC</span>) : Time","args_html":"(milliseconds : Int, location = <span class=\"t\">Location</span><span class=\"t\">::</span><span class=\"t\">UTC</span>) : <a href=\"Time.html\">Time</a>","location":{"filename":"src/popcorn/cast/int.cr","line_number":102,"url":"https://github.com/icyleaf/popcorn/blob/f7fd28da71b39e187e4f60ca6aefcf02e2c3ca66/src/popcorn/cast/int.cr#L102"},"def":{"name":"unix_ms","args":[{"name":"milliseconds","doc":null,"default_value":"","external_name":"milliseconds","restriction":"Int"},{"name":"location","doc":null,"default_value":"Location::UTC","external_name":"location","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Time","visibility":"Public","body":"milliseconds = milliseconds.to_i64\nseconds = UNIX_EPOCH.total_seconds + (milliseconds / 1000)\nnanoseconds = (milliseconds % 1000) * NANOSECONDS_PER_MILLISECOND\nnew(seconds: seconds.to_i64, nanoseconds: nanoseconds.to_i, location: location)\n"}}],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/UInt16","path":"UInt16.html","kind":"struct","full_name":"UInt16","name":"UInt16","abstract":false,"superclass":{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"popcorn/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`UInt16` cast methods","summary":"<p><code><a href=\"UInt16.html\">UInt16</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/UInt32","path":"UInt32.html","kind":"struct","full_name":"UInt32","name":"UInt32","abstract":false,"superclass":{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"popcorn/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`UInt32` cast methods","summary":"<p><code><a href=\"UInt32.html\">UInt32</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/UInt64","path":"UInt64.html","kind":"struct","full_name":"UInt64","name":"UInt64","abstract":false,"superclass":{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"popcorn/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`UInt64` cast methods","summary":"<p><code><a href=\"UInt64.html\">UInt64</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]},{"html_id":"popcorn/UInt8","path":"UInt8.html","kind":"struct","full_name":"UInt8","name":"UInt8","abstract":false,"superclass":{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"popcorn/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"popcorn/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"popcorn/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"popcorn/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"popcorn/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"popcorn","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`UInt8` cast methods","summary":"<p><code><a href=\"UInt8.html\">UInt8</a></code> cast methods</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"cast(other)-instance-method","html_id":"cast(other)-instance-method","name":"cast","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast(self, other)"}},{"id":"cast?(other)-instance-method","html_id":"cast?(other)-instance-method","name":"cast?","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":null,"def":{"name":"cast?","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.cast?(self, other)"}},{"id":"to_array(value_type:T.class=String)forallT-instance-method","html_id":"to_array(value_type:T.class=String)forallT-instance-method","name":"to_array","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array(self, value_type)"}},{"id":"to_array?(value_type:T.class=String)forallT-instance-method","html_id":"to_array?(value_type:T.class=String)forallT-instance-method","name":"to_array?","doc":"Returns the `Array` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Array</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_array?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_array?(self, value_type)"}},{"id":"to_bool-instance-method","html_id":"to_bool-instance-method","name":"to_bool","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool(self)"}},{"id":"to_bool?-instance-method","html_id":"to_bool?-instance-method","name":"to_bool?","doc":"Returns the `Bool` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Bool.html\">Bool</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_bool?(self)"}},{"id":"to_float-instance-method","html_id":"to_float-instance-method","name":"to_float","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float(self)"}},{"id":"to_float32-instance-method","html_id":"to_float32-instance-method","name":"to_float32","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32(self)"}},{"id":"to_float32?-instance-method","html_id":"to_float32?-instance-method","name":"to_float32?","doc":"Returns the `Float32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float32.html\">Float32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float32?(self)"}},{"id":"to_float64-instance-method","html_id":"to_float64-instance-method","name":"to_float64","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64(self)"}},{"id":"to_float64?-instance-method","html_id":"to_float64?-instance-method","name":"to_float64?","doc":"Returns the `Float64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Float64.html\">Float64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float64?(self)"}},{"id":"to_float?-instance-method","html_id":"to_float?-instance-method","name":"to_float?","doc":"Returns the `Float` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Float</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_float?(self)"}},{"id":"to_hash(value_type:T.class=String)forallT-instance-method","html_id":"to_hash(value_type:T.class=String)forallT-instance-method","name":"to_hash","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash(self, value_type)"}},{"id":"to_hash?(value_type:T.class=String)forallT-instance-method","html_id":"to_hash?(value_type:T.class=String)forallT-instance-method","name":"to_hash?","doc":"Returns the `Hash` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Hash</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"args_string":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","args_html":"(value_type : <span class=\"t\">T</span>.<span class=\"k\">class</span> = <span class=\"t\">String</span>) forall T","location":null,"def":{"name":"to_hash?","args":[{"name":"value_type","doc":null,"default_value":"String","external_name":"value_type","restriction":"T.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_hash?(self, value_type)"}},{"id":"to_int-instance-method","html_id":"to_int-instance-method","name":"to_int","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int(self)"}},{"id":"to_int16-instance-method","html_id":"to_int16-instance-method","name":"to_int16","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16(self)"}},{"id":"to_int16?-instance-method","html_id":"to_int16?-instance-method","name":"to_int16?","doc":"Returns the `Int16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int16.html\">Int16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int16?(self)"}},{"id":"to_int32-instance-method","html_id":"to_int32-instance-method","name":"to_int32","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32(self)"}},{"id":"to_int32?-instance-method","html_id":"to_int32?-instance-method","name":"to_int32?","doc":"Returns the `Int32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int32.html\">Int32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int32?(self)"}},{"id":"to_int64-instance-method","html_id":"to_int64-instance-method","name":"to_int64","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64(self)"}},{"id":"to_int64?-instance-method","html_id":"to_int64?-instance-method","name":"to_int64?","doc":"Returns the `Int64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int64.html\">Int64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int64?(self)"}},{"id":"to_int8-instance-method","html_id":"to_int8-instance-method","name":"to_int8","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8(self)"}},{"id":"to_int8?-instance-method","html_id":"to_int8?-instance-method","name":"to_int8?","doc":"Returns the `Int8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Int8.html\">Int8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int8?(self)"}},{"id":"to_int?-instance-method","html_id":"to_int?-instance-method","name":"to_int?","doc":"Returns the `Int` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>Int</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_int?(self)"}},{"id":"to_string-instance-method","html_id":"to_string-instance-method","name":"to_string","doc":"Alias to `Object.to_s`","summary":"<p>Alias to <code>Object.to_s</code></p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s"}},{"id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time(self, location, formatters)"}},{"id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","html_id":"to_time?(location:Time::Location?=nil,formatters:Array(String)?=nil)-instance-method","name":"to_time?","doc":"Returns the `Time` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"Time.html\">Time</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"args_string":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(String)? = <span class=\"n\">nil</span>)","args_html":"(location : Time::Location? = <span class=\"n\">nil</span>, formatters : Array(<a href=\"String.html\">String</a>)? = <span class=\"n\">nil</span>)","location":null,"def":{"name":"to_time?","args":[{"name":"location","doc":null,"default_value":"nil","external_name":"location","restriction":"Time::Location | ::Nil"},{"name":"formatters","doc":null,"default_value":"nil","external_name":"formatters","restriction":"Array(String) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_time?(self, location, formatters)"}},{"id":"to_uint-instance-method","html_id":"to_uint-instance-method","name":"to_uint","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint(self)"}},{"id":"to_uint16-instance-method","html_id":"to_uint16-instance-method","name":"to_uint16","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16(self)"}},{"id":"to_uint16?-instance-method","html_id":"to_uint16?-instance-method","name":"to_uint16?","doc":"Returns the `UInt16` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt16.html\">UInt16</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint16?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint16?(self)"}},{"id":"to_uint32-instance-method","html_id":"to_uint32-instance-method","name":"to_uint32","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32(self)"}},{"id":"to_uint32?-instance-method","html_id":"to_uint32?-instance-method","name":"to_uint32?","doc":"Returns the `UInt32` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt32.html\">UInt32</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint32?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint32?(self)"}},{"id":"to_uint64-instance-method","html_id":"to_uint64-instance-method","name":"to_uint64","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64(self)"}},{"id":"to_uint64?-instance-method","html_id":"to_uint64?-instance-method","name":"to_uint64?","doc":"Returns the `UInt64` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt64.html\">UInt64</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint64?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint64?(self)"}},{"id":"to_uint8-instance-method","html_id":"to_uint8-instance-method","name":"to_uint8","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8(self)"}},{"id":"to_uint8?-instance-method","html_id":"to_uint8?-instance-method","name":"to_uint8?","doc":"Returns the `UInt8` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code><a href=\"UInt8.html\">UInt8</a></code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint8?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint8?(self)"}},{"id":"to_uint?-instance-method","html_id":"to_uint?-instance-method","name":"to_uint?","doc":"Returns the `UInt` value represented by given `YAML::Any` type, else raise a `TypeCastError` exception.","summary":"<p>Returns the <code>UInt</code> value represented by given <code><a href=\"YAML/Any.html\">YAML::Any</a></code> type, else raise a <code>TypeCastError</code> exception.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":null,"def":{"name":"to_uint?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Popcorn.to_uint?(self)"}}],"macros":[],"types":[]}]}})